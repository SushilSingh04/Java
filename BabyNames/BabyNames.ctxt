#BlueJ class context
comment0.target=BabyNames
comment0.text=\r\n\ Write\ a\ description\ of\ BabyNames\ here.\r\n\ \r\n\ @author\ (your\ name)\ \r\n\ @version\ (a\ version\ number\ or\ a\ date)\r\n
comment1.params=fr
comment1.target=void\ totalBirths(edu.duke.FileResource)
comment10.params=
comment10.target=void\ testWhatIsNameInYear()
comment11.params=name\ gender
comment11.target=java.lang.String\ yearOfHighestRank(java.lang.String,\ java.lang.String)
comment12.params=
comment12.target=void\ testyearOfHighestRank()
comment13.params=name\ gender
comment13.target=double\ getAverageRank(java.lang.String,\ java.lang.String)
comment14.params=
comment14.target=void\ testAverageRank()
comment15.params=parser\ name\ gender
comment15.target=int\ getTotalBirthsRankedHigher(org.apache.commons.csv.CSVParser,\ java.lang.String,\ java.lang.String)
comment16.params=
comment16.target=void\ testGetTotalBirthsRankedHigher()
comment2.params=fr
comment2.target=void\ numberOfNames(edu.duke.FileResource)
comment3.params=
comment3.target=void\ testNumberOfNames()
comment4.params=
comment4.target=void\ testTotalBirths()
comment5.params=parser\ name\ gender
comment5.target=int\ getRank(org.apache.commons.csv.CSVParser,\ java.lang.String,\ java.lang.String)
comment6.params=
comment6.target=void\ testGetRank()
comment7.params=parser\ rank\ gender
comment7.target=java.lang.String\ getName(org.apache.commons.csv.CSVParser,\ int,\ java.lang.String)
comment8.params=
comment8.target=void\ testGetName()
comment9.params=name\ parser1\ parser2\ gender
comment9.target=void\ whatIsNameInYear(java.lang.String,\ org.apache.commons.csv.CSVParser,\ org.apache.commons.csv.CSVParser,\ java.lang.String)
numComments=17
